{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","isOn","setIsOn","timer","setTimer","start","setStart","lastLap","setLastLap","laps","setLaps","countRef","useRef","formatTime","time","toString","replace","className","class","href","style","gap","onClick","Date","now","current","setInterval","clearInterval","maxWidth","map","lap","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAoGeA,G,YAhGH,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEUF,mBAAS,GAFnB,mBAETG,EAFS,KAEFC,EAFE,OAGUJ,mBAAS,GAHnB,mBAGTK,EAHS,KAGFC,EAHE,OAIcN,mBAAS,GAJvB,mBAITO,EAJS,KAIAC,EAJA,OAKQR,mBAAS,IALjB,mBAKTS,EALS,KAKHC,EALG,KAOVC,EAAWC,iBAAO,MAgClBC,EAAa,SAACC,GAClB,OAAQA,EAAO,KAAMC,WAAWC,QAAQ,IAAK,MAG/C,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,MAAM,sDAAX,SACE,qBAAKA,MAAM,YAAX,SACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,oCAKJ,sBAAKF,UAAU,YAAf,UACE,mBAAGA,UAAU,KAAb,SAAmBJ,EAAWV,EAAQE,KACtC,sBAAKY,UAAU,iBAAiBG,MAAO,CAAEC,IAAK,IAA9C,WACY,IAATpB,EACC,wBAAQgB,UAAU,yBAAyBK,QA/CjC,WAClBpB,GAAQ,GACRI,EAASiB,KAAKC,OAEdhB,EAAWe,KAAKC,OAEhBb,EAASc,QAAUC,aAAY,WAC7BtB,EAASmB,KAAKC,SACb,IAuCK,mBAIA,wBAAQP,UAAU,yBAAyBK,QAxCnC,WAChBZ,EAAQ,GAAD,mBAAKD,GAAL,CAAWI,EAAWV,EAAQI,MACrCC,EAAWe,KAAKC,QAsCR,iBAKF,wBAAQP,UAAU,wBAAwBK,QAxC/B,WACjBK,cAAchB,EAASc,SACvBvB,GAAQ,IAsCF,kBAGA,wBAAQe,UAAU,yBAAyBK,QAtC/B,WAClBhB,EAAS,GACTF,EAAS,GACTI,EAAW,GACXmB,cAAchB,EAASc,SACvBvB,GAAQ,GACRQ,EAAQ,KAgCF,sBAIF,wBAAOO,UAAU,sBAAsBG,MAAO,CAAEQ,SAAU,KAA1D,UACE,gCACE,+BACE,qCACA,2CAGJ,gCACGnB,EAAKoB,KAAI,SAACC,EAAKC,GAAN,OACR,+BACE,6BAAKA,EAAQ,IACb,6BAAKD,uBC3ENE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95fedc13.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const [isOn, setIsOn] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [start, setStart] = useState(0);\n  const [lastLap, setLastLap] = useState(0);\n  const [laps, setLaps] = useState([]);\n\n  const countRef = useRef(null);\n\n  const handleStart = () => {\n    setIsOn(true);\n    setStart(Date.now());\n\n    setLastLap(Date.now());\n\n    countRef.current = setInterval(() => {\n      setTimer(Date.now());\n    }, 1);\n  };\n\n  const handleLap = () => {\n    setLaps([...laps, formatTime(timer - lastLap)]);\n    setLastLap(Date.now());\n  };\n\n  const handleStop = () => {\n    clearInterval(countRef.current);\n    setIsOn(false);\n  };\n\n  const handleReset = () => {\n    setStart(0);\n    setTimer(0);\n    setLastLap(0);\n    clearInterval(countRef.current);\n    setIsOn(false);\n    setLaps([]);\n  };\n\n  const formatTime = (time) => {\n    return (time / 1000).toString().replace(\".\", \",\");\n  };\n\n  return (\n    <div className=\"app\">\n      <nav class=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3\">\n        <div class=\"container\">\n          <a class=\"navbar-brand\" href=\"/\">\n            Gambling Stopwatch\n          </a>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <p className=\"h1\">{formatTime(timer - start)}</p>\n        <div className=\"buttons d-flex\" style={{ gap: 10 }}>\n          {isOn === false ? (\n            <button className=\"btn btn-primary btn-lg\" onClick={handleStart}>\n              Start\n            </button>\n          ) : (\n            <button className=\"btn btn-success btn-lg\" onClick={handleLap}>\n              Lap\n            </button>\n          )}\n\n          <button className=\"btn btn-danger btn-lg\" onClick={handleStop}>\n            Stop\n          </button>\n          <button className=\"btn btn-warning btn-lg\" onClick={handleReset}>\n            Reset\n          </button>\n        </div>\n        <table className=\"table table-sm mt-2\" style={{ maxWidth: 150 }}>\n          <thead>\n            <tr>\n              <th>Lap</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            {laps.map((lap, index) => (\n              <tr>\n                <td>{index + 1}</td>\n                <td>{lap}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n// 1 - 0,989\n// 2 - 1,266\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}